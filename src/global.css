@keyframes ball {
  0%, 100% {
    animation-timing-function: cubic-bezier(0.45, 0, 0.9, 0.55); }
  0% {
    transform: translate(0, 0); }
  50% {
    transform: translate(0, 108px);
    animation-timing-function: cubic-bezier(0, 0.45, 0.55, 0.9); }
  100% {
    transform: translate(0, 0); } }

body {
  font-family: 'Anonymous Pro', monospace;
  font-size: 14px;
  margin: 0;
  padding: 0; }

* {
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent; }

.background {
  min-height: 100vh;
  background-image: url("./media/halftone-yellow.png"); }

.error {
  width: 100%;
  height: calc(100vh - 200px);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-weight: 700; }

.gallery-wrapper {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin: 100px 0; }
  .gallery-wrapper .picture {
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: center;
    background-color: white;
    margin: 10px;
    padding: 20px; }
    .gallery-wrapper .picture .caption {
      width: 100%; }
      .gallery-wrapper .picture .caption > p {
        width: 300px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis; }
      .gallery-wrapper .picture .caption div {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between; }
        .gallery-wrapper .picture .caption div > p {
          max-width: 200px; }
    .gallery-wrapper .picture img {
      width: auto;
      max-width: 300px;
      height: 195px;
      filter: grayscale(100%);
      cursor: pointer; }
    .gallery-wrapper .picture:hover img {
      filter: none; }

.gallery-loader {
  position: relative;
  width: 100%;
  height: 100vh; }
  .gallery-loader .ball {
    width: 52px;
    height: 52px;
    position: absolute;
    top: calc(50% - 52px / 2);
    left: calc(50% - 52px / 2);
    border-radius: 50%;
    background: black;
    animation: ball 1s linear infinite; }
